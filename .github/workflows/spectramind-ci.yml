name: SpectraMind V50 CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]
  workflow_dispatch:
    inputs:
      overrides:
        description: "Hydra overrides (e.g., training.scheduler.max_epochs=2)"
        required: false
        default: ""
      python-version:
        description: "Python version"
        required: false
        default: "3.11"

jobs:
  build-and-test:
    name: Build & Simulated Train/Predict
    runs-on: ubuntu-latest
    timeout-minutes: 20

    env:
      # Keep in sync with Makefile defaults
      PY: python3
      CFG: configs/config_v50.yaml
      SRC: src
      HYDRA_FULL_ERROR: "1"
      # Fast CI run
      CI_OVERRIDES: "training.scheduler.max_epochs=2 data.batch_size=4 data.num_workers=2"
      # Kaggle-like paths (they won't exist on GitHub runner; kaggle-verify just prints status)
      KAGGLE_FGS1: /kaggle/input/fgs1
      KAGGLE_AIRS: /kaggle/input/airs-ch0
      KAGGLE_CAL: /kaggle/input/calibration
      KAGGLE_WORK: /home/runner/work/_temp
      KAGGLE_SUB: /home/runner/work/_temp/submission.csv
      EPOCHS: "2"
      BATCH: "4"
      WORKERS: "2"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ github.event.inputs.python-version || '3.11' }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install minimal deps
        run: |
          python -m pip install --upgrade pip
          # minimal requirements for stubs; add your project deps when ready
          pip install hydra-core==1.3.2 omegaconf==2.3.0

      - name: Show tree (for debugging)
        run: |
          echo "Repository layout:"
          ls -la
          echo
          echo "configs/:"
          ls -la configs || true
          echo
          echo "src/:"
          ls -la src || true

      - name: Kaggle verify (paths existence check)
        run: |
          make kaggle-verify

      - name: Simulated Train (fast)
        run: |
          make train OVERRIDES="${CI_OVERRIDES} ${{ github.event.inputs.overrides }}"

      - name: Simulated Predict (fast)
        run: |
          make predict OVERRIDES="predict.export.submission_csv=outputs/submission_ci.csv ${CI_OVERRIDES} ${{ github.event.inputs.overrides }}"

      - name: Upload diagnostics artifacts
        uses: actions/upload-artifact@v4
        with:
          name: diagnostics-${{ github.run_number }}
          path: |
            diagnostics/*
            v50_debug_log.md
          if-no-files-found: warn
          retention-days: 7

      - name: Upload submission
        uses: actions/upload-artifact@v4
        with:
          name: submission-${{ github.run_number }}
          path: |
            outputs/submission*.csv
          if-no-files-found: warn
          retention-days: 7

  kaggle-presets:
    name: Kaggle Presets (Simulated)
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: build-and-test

    env:
      PY: python3
      CFG: configs/config_v50.yaml
      SRC: src
      HYDRA_FULL_ERROR: "1"
      # Kaggle preset vars; the verify step will report missing dirs on GH runner
      KAGGLE_FGS1: /kaggle/input/fgs1
      KAGGLE_AIRS: /kaggle/input/airs-ch0
      KAGGLE_CAL: /kaggle/input/calibration
      KAGGLE_WORK: /home/runner/work/_temp
      KAGGLE_SUB: /home/runner/work/_temp/submission_kaggle_preset.csv
      EPOCHS: "2"
      BATCH: "4"
      WORKERS: "2"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install minimal deps
        run: |
          python -m pip install --upgrade pip
          pip install hydra-core==1.3.2 omegaconf==2.3.0

      - name: Kaggle verify (simulated)
        run: |
          make kaggle-verify

      - name: Kaggle train (simulated, fast)
        run: |
          make kaggle-train

      - name: Kaggle predict (simulated, fast)
        run: |
          make kaggle-predict

      - name: Upload kaggle preset artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kaggle-presets-${{ github.run_number }}
          path: |
            diagnostics/*
            outputs/*.csv
            v50_debug_log.md
          if-no-files-found: warn
          retention-days: 7